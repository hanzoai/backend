(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1238:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(440).configure)([__webpack_require__(1239)],module,!1)}).call(this,__webpack_require__(134)(module))},1239:function(module,exports,__webpack_require__){var map={"./MultiSelect.stories.tsx":1271};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1239},1271:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Multiple",(function(){return MultiSelect_stories_Multiple})),__webpack_require__.d(__webpack_exports__,"Single",(function(){return MultiSelect_stories_Single}));__webpack_require__(25),__webpack_require__(272),__webpack_require__(10),__webpack_require__(15),__webpack_require__(14),__webpack_require__(26),__webpack_require__(20),__webpack_require__(18),__webpack_require__(23),__webpack_require__(19),__webpack_require__(12),__webpack_require__(35);var react=__webpack_require__(0),esm=__webpack_require__(90),createTheme=__webpack_require__(160),StyledEngineProvider=__webpack_require__(1267),ThemeProvider=__webpack_require__(1328),src=__webpack_require__(294),jsx_runtime=__webpack_require__(1);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var theme=Object(createTheme.b)({components:{MuiTextField:{defeaultProps:{variant:"filled",size:"small"}},MuiButton:{defaultProps:{variant:"outlined",color:"secondary"}}}}),MultiSelect_stories_Multiple=(__webpack_exports__.default={parameters:{storySource:{source:"import React, { useState } from 'react';\nimport { action } from '@storybook/addon-actions';\n\nimport {\n  StyledEngineProvider,\n  createTheme,\n  ThemeProvider,\n} from '@mui/material';\n\nimport MultiSelect from '../src';\nimport { top100Films } from './data';\n\nconst theme = createTheme({\n  components: {\n    MuiTextField: {\n      defeaultProps: {\n        variant: 'filled',\n        size: 'small',\n      },\n    },\n    MuiButton: {\n      defaultProps: {\n        variant: 'outlined',\n        color: 'secondary',\n      },\n    },\n  },\n});\n\nexport default {\n  title: 'MultiSelect',\n  component: MultiSelect,\n  decorators: [\n    (storyFn) => (\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <div style={{ maxWidth: 600, margin: '40px auto' }}>{storyFn()}</div>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    ),\n  ],\n  args: {\n    label: 'Movie',\n    labelPlural: 'Movies',\n    empty: false,\n    options: top100Films,\n    disabled: false,\n    searchable: true,\n    freeText: false,\n    selectAll: true,\n    clearable: true,\n  },\n};\n\nexport const Multiple = (args) => {\n  const [value, setValue] = useState<string[]>(['The Godfather']);\n\n  const handleChange = (value, reason) => {\n    setValue(value);\n    action('Value changed')(value, reason);\n  };\n\n  return (\n    <MultiSelect\n      {...args}\n      options={args.empty ? [] : args.options}\n      value={value}\n      onChange={handleChange}\n      onOpen={action('Opened')}\n      onClose={action('Closed')}\n    />\n  );\n};\nMultiple.args = { max: 3 };\n\nexport const Single = (args) => {\n  const [value, setValue] = useState<string>('The Godfather');\n\n  const handleChange = (value, reason) => {\n    setValue(value);\n    action('Value changed')(value, reason);\n  };\n\n  return (\n    <MultiSelect\n      {...args}\n      options={args.empty ? [] : args.options}\n      multiple={false}\n      value={value}\n      onChange={handleChange}\n      onOpen={action('Opened')}\n      onClose={action('Closed')}\n    />\n  );\n};\n",locationsMap:{multiple:{startLoc:{col:24,line:55},endLoc:{col:1,line:73},startBody:{col:24,line:55},endBody:{col:1,line:73}},single:{startLoc:{col:22,line:76},endLoc:{col:1,line:95},startBody:{col:22,line:76},endBody:{col:1,line:95}}}}},title:"MultiSelect",component:src.default,decorators:[function(storyFn){return Object(jsx_runtime.jsx)(StyledEngineProvider.a,{injectFirst:!0,children:Object(jsx_runtime.jsx)(ThemeProvider.a,{theme:theme,children:Object(jsx_runtime.jsx)("div",{style:{maxWidth:600,margin:"40px auto"},children:storyFn()})})})}],args:{label:"Movie",labelPlural:"Movies",empty:!1,options:["The Shawshank Redemption","The Godfather","The Godfather: Part II","The Dark Knight","12 Angry Men","Schindler's List","Pulp Fiction","The Lord of the Rings: The Return of the King","The Good, the Bad and the Ugly","Fight Club","The Lord of the Rings: The Fellowship of the Ring","Star Wars: Episode V - The Empire Strikes Back","Forrest Gump","Inception","The Lord of the Rings: The Two Towers","One Flew Over the Cuckoo's Nest","Goodfellas","The Matrix","Seven Samurai","Star Wars: Episode IV - A New Hope","City of God","Se7en","The Silence of the Lambs","It's a Wonderful Life","Life Is Beautiful","The Usual Suspects","Léon: The Professional","Spirited Away","Saving Private Ryan","Once Upon a Time in the West","American History X","Interstellar","Casablanca","City Lights","Psycho","The Green Mile","The Intouchables","Modern Times","Raiders of the Lost Ark","Rear Window","The Pianist","The Departed","Terminator 2: Judgment Day","Back to the Future","Whiplash","Gladiator","Memento","The Prestige","The Lion King","Apocalypse Now","Alien","Sunset Boulevard","Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb","The Great Dictator","Cinema Paradiso","The Lives of Others","Grave of the Fireflies","Paths of Glory","Django Unchained","The Shining","WALL·E","American Beauty","The Dark Knight Rises","Princess Mononoke","Aliens","Oldboy","Once Upon a Time in America","Witness for the Prosecution","Das Boot","Citizen Kane","North by Northwest","Vertigo","Star Wars: Episode VI - Return of the Jedi","Reservoir Dogs","Braveheart","M","Requiem for a Dream","Amélie","A Clockwork Orange","Like Stars on Earth","Taxi Driver","Lawrence of Arabia","Double Indemnity","Eternal Sunshine of the Spotless Mind","Amadeus","To Kill a Mockingbird","Toy Story 3","Logan","Full Metal Jacket","Dangal","The Sting","2001: A Space Odyssey","Singin' in the Rain","Toy Story","Bicycle Thieves","The Kid","Inglourious Basterds","Snatch","3 Idiots","Monty Python and the Holy Grail"],disabled:!1,searchable:!0,freeText:!1,selectAll:!0,clearable:!0}},function Multiple(args){var _useState2=_slicedToArray(Object(react.useState)(["The Godfather"]),2),value=_useState2[0],setValue=_useState2[1];return Object(jsx_runtime.jsx)(src.default,Object.assign({},args,{options:args.empty?[]:args.options,value:value,onChange:function handleChange(value,reason){setValue(value),Object(esm.action)("Value changed")(value,reason)},onOpen:Object(esm.action)("Opened"),onClose:Object(esm.action)("Closed")}))});MultiSelect_stories_Multiple.displayName="Multiple",MultiSelect_stories_Multiple.args={max:3};var MultiSelect_stories_Single=function Single(args){var _useState4=_slicedToArray(Object(react.useState)("The Godfather"),2),value=_useState4[0],setValue=_useState4[1];return Object(jsx_runtime.jsx)(src.default,Object.assign({},args,{options:args.empty?[]:args.options,multiple:!1,value:value,onChange:function handleChange(value,reason){setValue(value),Object(esm.action)("Value changed")(value,reason)},onOpen:Object(esm.action)("Opened"),onClose:Object(esm.action)("Closed")}))};MultiSelect_stories_Single.displayName="Single",MultiSelect_stories_Multiple.parameters=Object.assign({storySource:{source:"(args) => {\n  const [value, setValue] = useState<string[]>(['The Godfather']);\n\n  const handleChange = (value, reason) => {\n    setValue(value);\n    action('Value changed')(value, reason);\n  };\n\n  return (\n    <MultiSelect\n      {...args}\n      options={args.empty ? [] : args.options}\n      value={value}\n      onChange={handleChange}\n      onOpen={action('Opened')}\n      onClose={action('Closed')}\n    />\n  );\n}"}},MultiSelect_stories_Multiple.parameters),MultiSelect_stories_Single.parameters=Object.assign({storySource:{source:"(args) => {\n  const [value, setValue] = useState<string>('The Godfather');\n\n  const handleChange = (value, reason) => {\n    setValue(value);\n    action('Value changed')(value, reason);\n  };\n\n  return (\n    <MultiSelect\n      {...args}\n      options={args.empty ? [] : args.options}\n      multiple={false}\n      value={value}\n      onChange={handleChange}\n      onOpen={action('Opened')}\n      onClose={action('Closed')}\n    />\n  );\n}"}},MultiSelect_stories_Single.parameters);try{MultiSelect_stories_Multiple.displayName="Multiple",MultiSelect_stories_Multiple.__docgenInfo={description:"",displayName:"Multiple",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MultiSelect.stories.tsx#Multiple"]={docgenInfo:MultiSelect_stories_Multiple.__docgenInfo,name:"Multiple",path:"stories/MultiSelect.stories.tsx#Multiple"})}catch(__react_docgen_typescript_loader_error){}try{MultiSelect_stories_Single.displayName="Single",MultiSelect_stories_Single.__docgenInfo={description:"",displayName:"Single",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/MultiSelect.stories.tsx#Single"]={docgenInfo:MultiSelect_stories_Single.__docgenInfo,name:"Single",path:"stories/MultiSelect.stories.tsx#Single"})}catch(__react_docgen_typescript_loader_error){}},294:function(module,__webpack_exports__,__webpack_require__){"use strict";var _MultiSelect__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(582);__webpack_require__.d(__webpack_exports__,"default",(function(){return _MultiSelect__WEBPACK_IMPORTED_MODULE_0__.a}));__webpack_require__(43),__webpack_require__(573);try{src.displayName="src",src.__docgenInfo={description:"A component to select multiple items from a list of options using the\n[Material-UI Autocomplete component](https://material-ui.com/components/autocomplete/).\n\nTo use, you must provide at least the `value`, `onChange`, and `options`\nprops. You should also provide a `label` and `labelPlural` prop. By default,\nthe component is in multi-select mode and values are strings.\n\n## `options` prop\n\nThe simplest value for the `options` prop is an array of strings.\n\nIf you need more control over the value returned by MultiSelect, pass an\narray of `Option` objects, which must follow this type:\n\n```ts\ntype Option<T = string> = {\n  value: T;\n  label: string;\n  disabled?: boolean;\n}\n```\n\n## `value` and `onChange` prop types depend on the `multiple` prop\n\n`value` must be an array of `T` in multi-select mode.\n\nIn single-select mode, it must be either `T` itself or `null`.\n\nThe first parameter of `onChange` follows the same type as `value`.",displayName:"src",props:{multiple:{defaultValue:{value:"true"},description:"**⚠️ Important:** This prop dictates the type of the\n`value` and `onChange` props",name:"multiple",required:!1,type:{name:"boolean | undefined"}},value:{defaultValue:null,description:"The value of MultiSelect. This component must be controlled.\n\nThe value must have reference equality with the option in order to be\nselected. You can customize the equality behavior with the\n[Autocomplete `getOptionSelected` prop](https://material-ui.com/api/autocomplete/)\n\n**⚠️ Important:**\n\n- If `multiple: true`, this prop must be an array of values\n- If `multiple: false`, this prop must be either the value itself or `null`",name:"value",required:!0,type:{name:"T | T[] | null"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.\n\n`value` parameter type is the same as the `value` prop type above.\n\nNote if `multiple: false`, the `value` parameter may be `null` and the\npopup will automatically close whenever the value changes",name:"onChange",required:!0,type:{name:"((value: T[], reason: AutocompleteChangeReason) => void) | ((value: T | null, reason: AutocompleteChangeReason) => void)"}},options:{defaultValue:null,description:"The options used by Autocomplete.\n\nIf an array of strings is provided, each value will be mapped to\nan `Option` object",name:"options",required:!0,type:{name:"string[] | Option<T>[]"}},disabled:{defaultValue:{value:"false"},description:"Disable the field entirely.\nAlso prevents Autocomplete from being rendered",name:"disabled",required:!1,type:{name:"boolean | undefined"}},displayEmpty:{defaultValue:{value:"false"},description:"Display “0 of X selected” when empty",name:"displayEmpty",required:!1,type:{name:"boolean | undefined"}},backdrop:{defaultValue:{value:"false"},description:"Show the backdrop when the dropdown popup is open",name:"backdrop",required:!1,type:{name:"boolean | undefined"}},max:{defaultValue:null,description:"Maximum number of items can be selected",name:"max",required:!1,type:{name:"number | undefined"}},onOpen:{defaultValue:null,description:"Callback fired when popup opens",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},onClose:{defaultValue:null,description:"Callback fired when popup closes",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},TextFieldProps:{defaultValue:{value:"{}"},description:"Override any props of the root MUI TextField component.\n[See props here](https://material-ui.com/api/text-field/)",name:"TextFieldProps",required:!1,type:{name:"Partial<TextFieldProps> | undefined"}},labelPlural:{defaultValue:null,description:"Used as the label for the search box and no options text",name:"labelPlural",required:!1,type:{name:"string | undefined"}},label:{defaultValue:{value:""},description:"Backup label if `labelPlural` is `undefined`.\nAlso used for “add item” text",name:"label",required:!1,type:{name:"string | undefined"}},searchable:{defaultValue:{value:"true"},description:"Optionally prevent the user from searching options",name:"searchable",required:!1,type:{name:"boolean | undefined"}},selectAll:{defaultValue:{value:"true"},description:"Optionally prevent the user to select all options if `multiple: true`",name:"selectAll",required:!1,type:{name:"boolean | undefined"}},clearable:{defaultValue:{value:"true"},description:"Optionally prevent from clearing the value",name:"clearable",required:!1,type:{name:"boolean | undefined"}},freeText:{defaultValue:{value:"false"},description:"Optionally allow the user to add any custom value.\nOption value **must** be string",name:"freeText",required:!1,type:{name:"boolean | undefined"}},countText:{defaultValue:null,description:"Optionally override the text shown in the count on the left of the footer",name:"countText",required:!1,type:{name:"ReactNode"}},clearText:{defaultValue:null,description:"Optionally override the text for the Clear button",name:"clearText",required:!1,type:{name:"string | undefined"}},selectAllText:{defaultValue:null,description:"Optionally override the text for the Select All button",name:"selectAllText",required:!1,type:{name:"string | undefined"}},doneText:{defaultValue:null,description:"Optionally override the text for the Done button",name:"doneText",required:!1,type:{name:"string | undefined"}},itemRenderer:{defaultValue:null,description:"Optionally override how each option is rendered, while still showing the\ncheckbox or radio icon.\n\nTo hide or change the icon, use\n[Autocomplete’s `renderOption` prop](https://material-ui.com/api/autocomplete/)",name:"itemRenderer",required:!1,type:{name:"((option: Option<T>, selected: boolean) => ReactNode) | undefined"}},itemIcons:{defaultValue:null,description:"Optionally override the checkbox and radio icons.",name:"itemIcons",required:!1,type:{name:'Partial<Record<"multiple" | "single" | "singleSelected" | "multipleSelected", ReactNode>> | undefined'}},SearchBoxProps:{defaultValue:null,description:"Override certain props of the search box MUI TextField component.\n[See props here](https://material-ui.com/api/text-field/)",name:"SearchBoxProps",required:!1,type:{name:"Partial<TextFieldProps> | undefined"}},AddButtonProps:{defaultValue:null,description:"Override certain props of the “Add New” Button component.\n[See props here](https://material-ui.com/api/button/)",name:"AddButtonProps",required:!1,type:{name:'(Partial<ButtonProps<"button", {}>> & { singleIcon?: ReactNode; multipleIcon?: ReactNode; }) | undefined'}},AddDialogProps:{defaultValue:null,description:"Override certain props of the “Add New” Dialog.",name:"AddDialogProps",required:!1,type:{name:"{ title?: ReactNode; textFieldLabel?: ReactNode; cancelButtonLabel?: ReactNode; addButtonLabel?: ReactNode; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.tsx#src"]={docgenInfo:src.__docgenInfo,name:"src",path:"src/index.tsx#src"})}catch(__react_docgen_typescript_loader_error){}},43:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"d",(function(){return SEARCH_AREA_HEIGHT})),__webpack_require__.d(__webpack_exports__,"b",(function(){return LISTBOX_MIN_HEIGHT})),__webpack_require__.d(__webpack_exports__,"c",(function(){return LISTBOX_MIN_WIDTH})),__webpack_require__.d(__webpack_exports__,"a",(function(){return FOOTER_HEIGHT}));var SEARCH_AREA_HEIGHT=40,LISTBOX_MIN_HEIGHT=112,LISTBOX_MIN_WIDTH=260,FOOTER_HEIGHT=48},573:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(574),__webpack_require__(575),__webpack_require__(576),__webpack_require__(577),__webpack_require__(578)},574:function(module,__webpack_exports__,__webpack_require__){},575:function(module,__webpack_exports__,__webpack_require__){},576:function(module,exports){},577:function(module,exports){},578:function(module,__webpack_exports__,__webpack_require__){},582:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MultiSelect}));__webpack_require__(32),__webpack_require__(1240),__webpack_require__(10),__webpack_require__(15),__webpack_require__(14),__webpack_require__(26),__webpack_require__(20),__webpack_require__(18),__webpack_require__(23),__webpack_require__(19),__webpack_require__(12),__webpack_require__(35),__webpack_require__(33),__webpack_require__(56),__webpack_require__(117),__webpack_require__(493),__webpack_require__(25),__webpack_require__(272);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),mui=__webpack_require__(137),TextField=__webpack_require__(1325),useThemeProps=(__webpack_require__(149),__webpack_require__(238),__webpack_require__(37),__webpack_require__(16)),Autocomplete=__webpack_require__(1324),InputAdornment=__webpack_require__(1339),Search=__webpack_require__(616),Search_default=__webpack_require__.n(Search),CheckBoxOutlineBlank=__webpack_require__(394),CheckBoxOutlineBlank_default=__webpack_require__.n(CheckBoxOutlineBlank),CheckBox=__webpack_require__(617),CheckBox_default=__webpack_require__.n(CheckBox),RadioButtonUnchecked=__webpack_require__(619),RadioButtonUnchecked_default=__webpack_require__.n(RadioButtonUnchecked),RadioButtonChecked=__webpack_require__(618),RadioButtonChecked_default=__webpack_require__.n(RadioButtonChecked),jsx_runtime=__webpack_require__(1),FragmentWrapper_FragmentWrapper=react.forwardRef((function FragmentWrapper(_ref,_){var children=_ref.children;return Object(jsx_runtime.jsx)(jsx_runtime.Fragment,{children:children})})),src_FragmentWrapper=FragmentWrapper_FragmentWrapper;try{FragmentWrapper_FragmentWrapper.displayName="FragmentWrapper",FragmentWrapper_FragmentWrapper.__docgenInfo={description:'Wrapper around `PopupContents`. Prevents the creation of an unnecessary\nwrapping `div` with `role="option" tabIndex="0"`. Allows the user to tab out\nto exit the popup.',displayName:"FragmentWrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/FragmentWrapper.tsx#FragmentWrapper"]={docgenInfo:FragmentWrapper_FragmentWrapper.__docgenInfo,name:"FragmentWrapper",path:"src/FragmentWrapper.tsx#FragmentWrapper"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(31),__webpack_require__(1256);var Grow=__webpack_require__(1315),Button=__webpack_require__(1332),Dialog=__webpack_require__(1333),DialogTitle=__webpack_require__(1335),DialogContent=__webpack_require__(1337),DialogActions=__webpack_require__(1338),AddCircle=__webpack_require__(614),AddCircle_default=__webpack_require__.n(AddCircle),AddBox=__webpack_require__(615),AddBox_default=__webpack_require__.n(AddBox);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var AddItem_Transition=react_default.a.forwardRef((function Transition(props,ref){return Object(jsx_runtime.jsx)(Grow.a,Object.assign({ref:ref},props))})),useStyles=Object(mui.makeStyles)()((function(theme){return{root:{margin:theme.spacing(1,.75,0)},startIcon:{marginLeft:theme.spacing(-.25),marginRight:theme.spacing(2)},iconSizeMedium:{"& > *:first-child":{fontSize:24}}}}));function AddItem(_ref){var _ref2,_AddButtonProps$singl,_themeProps$AddButton,_ref3,_AddButtonProps$multi,_themeProps$AddButton2,multiple=_ref.multiple,value=_ref.value,onChange=_ref.onChange,AddButtonProps=_ref.AddButtonProps,AddDialogProps=_ref.AddDialogProps,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,classes=useStyles().classes,themeProps=Object(useThemeProps.a)({props:{},name:"HanzoMultiSelect"}),addSingleIcon=null!==(_ref2=null!==(_AddButtonProps$singl=null==AddButtonProps?void 0:AddButtonProps.singleIcon)&&void 0!==_AddButtonProps$singl?_AddButtonProps$singl:null===(_themeProps$AddButton=themeProps.AddButtonProps)||void 0===_themeProps$AddButton?void 0:_themeProps$AddButton.singleIcon)&&void 0!==_ref2?_ref2:Object(jsx_runtime.jsx)(AddCircle_default.a,{}),addMultipleIcon=null!==(_ref3=null!==(_AddButtonProps$multi=null==AddButtonProps?void 0:AddButtonProps.multipleIcon)&&void 0!==_AddButtonProps$multi?_AddButtonProps$multi:null===(_themeProps$AddButton2=themeProps.AddButtonProps)||void 0===_themeProps$AddButton2?void 0:_themeProps$AddButton2.multipleIcon)&&void 0!==_ref3?_ref3:Object(jsx_runtime.jsx)(AddBox_default.a,{}),_useState2=_slicedToArray(Object(react.useState)(!1),2),open=_useState2[0],setOpen=_useState2[1],handleClose=function handleClose(){return setOpen(!1)},_useState4=_slicedToArray(Object(react.useState)(""),2),toAdd=_useState4[0],setToAdd=_useState4[1],handleAdd=function handleAdd(){onChange({},multiple?[].concat(_toConsumableArray(Array.isArray(value)?value:[]),[{value:toAdd,label:toAdd}]):{value:toAdd,label:toAdd},"createOption"),setToAdd(""),setTimeout((function(){return setOpen(!1)}))};return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsxs)(Button.a,Object.assign({startIcon:multiple?addMultipleIcon:addSingleIcon,color:"secondary",variant:"text",classes:classes,onClick:function onClick(){return setOpen(!0)},disabled:disabled},AddButtonProps,{sx:Object.assign({"&:last-child":{mb:1}},null==AddButtonProps?void 0:AddButtonProps.sx),children:["​",(null==AddButtonProps?void 0:AddButtonProps.children)||"Add new…"]})),Object(jsx_runtime.jsxs)(Dialog.a,{open:open,onClose:handleClose,"aria-labelledby":"form-dialog-title",TransitionComponent:AddItem_Transition,fullWidth:!0,maxWidth:"xs",children:[Object(jsx_runtime.jsx)(DialogTitle.a,{id:"form-dialog-title",children:(null==AddDialogProps?void 0:AddDialogProps.title)||"Add item to list"}),Object(jsx_runtime.jsx)(DialogContent.a,{children:Object(jsx_runtime.jsx)(TextField.a,{autoFocus:!0,label:(null==AddDialogProps?void 0:AddDialogProps.textFieldLabel)||"New item",variant:"filled",fullWidth:!0,value:toAdd,onChange:function onChange(e){return setToAdd(e.target.value)},onKeyDown:function onKeyDown(e){"Enter"===e.key&&handleAdd()}})}),Object(jsx_runtime.jsxs)(DialogActions.a,{children:[Object(jsx_runtime.jsx)(Button.a,{onClick:handleClose,children:(null==AddDialogProps?void 0:AddDialogProps.cancelButtonLabel)||"Cancel"}),Object(jsx_runtime.jsx)(Button.a,{onClick:handleAdd,color:"primary",variant:"contained",children:(null==AddDialogProps?void 0:AddDialogProps.addButtonLabel)||"Add"})]})]})]})}try{AddItem.displayName="AddItem",AddItem.__docgenInfo={description:"",displayName:"AddItem",props:{multiple:{defaultValue:null,description:"",name:"multiple",required:!0,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"Option<string> | Option<string>[] | null"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"((event: SyntheticEvent<Element, Event>, value: (string | Option<string>)[], reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<...> | undefined) => void) | ((event: SyntheticEvent<...>, value: string | ... 1 more ... | null, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<....."}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},AddButtonProps:{defaultValue:null,description:"",name:"AddButtonProps",required:!1,type:{name:'(Partial<ButtonProps<"button", {}>> & { singleIcon?: ReactNode; multipleIcon?: ReactNode; }) | undefined'}},AddDialogProps:{defaultValue:null,description:"",name:"AddDialogProps",required:!1,type:{name:"{ title?: ReactNode; textFieldLabel?: ReactNode; cancelButtonLabel?: ReactNode; addButtonLabel?: ReactNode; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/AddItem.tsx#AddItem"]={docgenInfo:AddItem.__docgenInfo,name:"AddItem",path:"src/AddItem.tsx#AddItem"})}catch(__react_docgen_typescript_loader_error){}var Grid=__webpack_require__(1330),Typography=__webpack_require__(1336),layout=__webpack_require__(43),PopupFooter_useStyles=Object(mui.makeStyles)()((function(theme){return{root:{width:"100%",height:layout.a,margin:0,"& > div":{padding:theme.spacing(0,1)+" !important"}},count:{display:"block",marginLeft:theme.spacing(1),fontFeatureSettings:'"tnum"',color:theme.palette.text.disabled,userSelect:"none"},button:{display:"flex"}}}));function PopupFooter(_ref){var multiple=_ref.multiple,selectAll=_ref.selectAll,clearable=_ref.clearable,onSelectAll=_ref.onSelectAll,onClear=_ref.onClear,onClose=_ref.onClose,countText=_ref.countText,value=_ref.value,options=_ref.options,max=_ref.max,clearText=_ref.clearText,selectAllText=_ref.selectAllText,doneText=_ref.doneText,classes=PopupFooter_useStyles().classes,clearButton=Object(jsx_runtime.jsx)(Button.a,{onClick:onClear,className:classes.button,variant:"text",color:"primary",disabled:!value||0===(null==value?void 0:value.length),children:clearText});return multiple?Object(jsx_runtime.jsxs)(Grid.a,{container:!0,spacing:2,className:classes.root,justifyContent:"space-between",alignItems:"center",children:[Object(jsx_runtime.jsx)(Grid.a,{item:!0,children:Object(jsx_runtime.jsx)(Typography.a,{variant:"button",className:classes.count,children:null!=countText?countText:value.length+" of "+options.length+(max?", max "+max:"")})}),selectAll?Object(jsx_runtime.jsx)(Grid.a,{item:!0,xs:!0,children:value.length>0&&!1!==clearable?clearButton:Object(jsx_runtime.jsx)(Button.a,{onClick:onSelectAll,className:classes.button,variant:"text",color:"primary",disabled:value.length>0,children:selectAllText})}):!1!==clearable&&Object(jsx_runtime.jsx)(Grid.a,{item:!0,xs:!0,children:clearButton}),Object(jsx_runtime.jsx)(Grid.a,{item:!0,children:Object(jsx_runtime.jsx)(Button.a,{onClick:onClose,className:classes.button,variant:"text",color:"primary",children:doneText})})]}):clearable?Object(jsx_runtime.jsxs)(Grid.a,{container:!0,spacing:2,className:classes.root,justifyContent:"space-between",alignItems:"center",children:[Object(jsx_runtime.jsx)(Grid.a,{item:!0,children:clearButton}),Object(jsx_runtime.jsx)(Grid.a,{item:!0,children:Object(jsx_runtime.jsx)(Button.a,{onClick:onClose,className:classes.button,variant:"text",color:"primary",children:doneText})})]}):null}try{PopupFooter.displayName="PopupFooter",PopupFooter.__docgenInfo={description:"",displayName:"PopupFooter",props:{multiple:{defaultValue:null,description:"",name:"multiple",required:!0,type:{name:"boolean"}},selectAll:{defaultValue:null,description:"",name:"selectAll",required:!0,type:{name:"boolean"}},clearable:{defaultValue:null,description:"",name:"clearable",required:!0,type:{name:"boolean"}},onSelectAll:{defaultValue:null,description:"",name:"onSelectAll",required:!0,type:{name:"() => void"}},onClear:{defaultValue:null,description:"",name:"onClear",required:!0,type:{name:"() => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},countText:{defaultValue:null,description:"",name:"countText",required:!1,type:{name:"ReactNode"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"any"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"any[]"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number | undefined"}},clearText:{defaultValue:null,description:"",name:"clearText",required:!1,type:{name:"string | undefined"}},selectAllText:{defaultValue:null,description:"",name:"selectAllText",required:!1,type:{name:"string | undefined"}},doneText:{defaultValue:null,description:"",name:"doneText",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/PopupFooter.tsx#PopupFooter"]={docgenInfo:PopupFooter.__docgenInfo,name:"PopupFooter",path:"src/PopupFooter.tsx#PopupFooter"})}catch(__react_docgen_typescript_loader_error){}function PopupContents_slicedToArray(arr,i){return function PopupContents_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function PopupContents_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function PopupContents_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return PopupContents_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return PopupContents_arrayLikeToArray(o,minLen)}(arr,i)||function PopupContents_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function PopupContents_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var PopupContents_useStyles=Object(mui.makeStyles)()((function(theme){var _Object$assign;return{root:{"&$hideSearch":{marginTop:-layout.d}},hideSearch:{},noFooter:{},freeText:{},popper:{minWidth:layout.c,width:"100% !important"},popperDisablePortal:{position:"relative"},search:{padding:theme.spacing(1,1,0)},searchInput:Object.assign({borderRadius:theme.shape.borderRadius,padding:theme.spacing(.75,.5)+" !important",height:32},theme.typography.body2),listbox:{padding:theme.spacing(1,0),borderBottom:"1px solid "+theme.palette.divider,boxSizing:"border-box",minHeight:layout.b,maxHeight:"calc(100vh - 96px - "+layout.d+"px - "+layout.a+"px)","&$freeText":{maxHeight:"calc(100vh - 96px - "+layout.d+"px - "+2*layout.a+"px)"},"&$hideSearch":{minHeight:layout.b+layout.d},"&$noFooter":{minHeight:layout.b+layout.a},"&$hideSearch$noFooter":{minHeight:layout.b+layout.d+layout.a}},noOptions:Object.assign({},theme.typography.button,{color:theme.palette.text.secondary,userSelect:"none",height:layout.b,display:"flex",justifyContent:"center",alignItems:"center"}),groupLabel:{top:theme.spacing(-2)},option:Object.assign({},theme.typography.body2,(_Object$assign={"&&":{paddingLeft:theme.spacing(2)},position:"relative",marginBottom:1,"&::after":{content:'""',display:"block",position:"absolute",bottom:-1,left:theme.spacing(6.5),right:theme.spacing(2),backgroundColor:theme.palette.divider,height:1},"&:last-child::after":{content:"none"},'&[aria-selected="true"]':{backgroundColor:"transparent"},'&[aria-selected="true"].Mui-focused':{backgroundColor:theme.palette.action.hover}},_Object$assign[theme.breakpoints.up("sm")]={minHeight:48},_Object$assign)),optionIcon:{margin:theme.spacing(0,2,0,-.5)}}}));function PopupContents(_ref){var multiple=_ref.multiple,options=_ref.options,value=_ref.value,onChange=_ref.onChange,onClose=_ref.onClose,onSelectAll=_ref.onSelectAll,onClear=_ref.onClear,_ref$labelPlural=_ref.labelPlural,labelPlural=void 0===_ref$labelPlural?"":_ref$labelPlural,_ref$label=_ref.label,label=void 0===_ref$label?"":_ref$label,max=_ref.max,_ref$searchable=_ref.searchable,searchable=void 0===_ref$searchable||_ref$searchable,_ref$selectAll=_ref.selectAll,selectAll=void 0===_ref$selectAll||_ref$selectAll,_ref$clearable=_ref.clearable,clearable=void 0===_ref$clearable||_ref$clearable,_ref$freeText=_ref.freeText,freeText=void 0!==_ref$freeText&&_ref$freeText,countText=_ref.countText,_ref$clearText=_ref.clearText,clearText=void 0===_ref$clearText?"Clear":_ref$clearText,_ref$selectAllText=_ref.selectAllText,selectAllText=void 0===_ref$selectAllText?"Select all":_ref$selectAllText,_ref$doneText=_ref.doneText,doneText=void 0===_ref$doneText?"Done":_ref$doneText,itemRenderer=_ref.itemRenderer,itemIcons=_ref.itemIcons,SearchBoxProps=_ref.SearchBoxProps,AutocompleteProps=_ref.AutocompleteProps,AddButtonProps=_ref.AddButtonProps,AddDialogProps=_ref.AddDialogProps,_useStyles=PopupContents_useStyles(),classes=_useStyles.classes,cx=_useStyles.cx,themeCheckboxProps=Object(useThemeProps.a)({props:{},name:"MuiCheckbox"}),themeRadioProps=Object(useThemeProps.a)({props:{},name:"MuiRadio"}),_useState2=PopupContents_slicedToArray(Object(react.useState)(Array.isArray(value)?new Set(value.map((function(item){return item.value}))):null===value?new Set:new Set([value.value])),2),selectedValues=_useState2[0],setSelectedValues=_useState2[1],disableNewSelect=!!max&&selectedValues.size>=max,searchBoxLabel="";searchBoxLabel=searchable?"Search "+(labelPlural||label):multiple?"Select "+(labelPlural||label):"Select a "+label;var SearchBoxIcon=Search_default.a,handleChange=function handleChange(_,newValue,reason){onChange(_,newValue,reason),Array.isArray(newValue)?setSelectedValues(new Set(newValue.map((function(item){return item.value})))):setSelectedValues(null==newValue?void 0:newValue.value)};return Object(jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[Object(jsx_runtime.jsx)(Autocomplete.a,Object.assign({noOptionsText:"No "+(labelPlural||label||"options"),renderOption:function renderOption(props,option,_ref2){var _ref3,_itemIcons$multiple,_ref4,_itemIcons$multipleSe,_ref5,_itemIcons$multiple2,_ref6,_itemIcons$singleSele,_ref7,_itemIcons$single,selected=_ref2.selected,icon=null!==(_ref3=null!==(_itemIcons$multiple=null==itemIcons?void 0:itemIcons.multiple)&&void 0!==_itemIcons$multiple?_itemIcons$multiple:themeCheckboxProps.icon)&&void 0!==_ref3?_ref3:Object(jsx_runtime.jsx)(CheckBoxOutlineBlank_default.a,{});multiple?icon=selected?null!==(_ref4=null!==(_itemIcons$multipleSe=null==itemIcons?void 0:itemIcons.multipleSelected)&&void 0!==_itemIcons$multipleSe?_itemIcons$multipleSe:themeCheckboxProps.checkedIcon)&&void 0!==_ref4?_ref4:Object(jsx_runtime.jsx)(CheckBox_default.a,{}):null!==(_ref5=null!==(_itemIcons$multiple2=null==itemIcons?void 0:itemIcons.multiple)&&void 0!==_itemIcons$multiple2?_itemIcons$multiple2:themeCheckboxProps.icon)&&void 0!==_ref5?_ref5:Object(jsx_runtime.jsx)(CheckBoxOutlineBlank_default.a,{}):icon=selected?null!==(_ref6=null!==(_itemIcons$singleSele=null==itemIcons?void 0:itemIcons.singleSelected)&&void 0!==_itemIcons$singleSele?_itemIcons$singleSele:themeRadioProps.checkedIcon)&&void 0!==_ref6?_ref6:Object(jsx_runtime.jsx)(RadioButtonChecked_default.a,{}):null!==(_ref7=null!==(_itemIcons$single=null==itemIcons?void 0:itemIcons.single)&&void 0!==_itemIcons$single?_itemIcons$single:themeRadioProps.icon)&&void 0!==_ref7?_ref7:Object(jsx_runtime.jsx)(RadioButtonUnchecked_default.a,{});return Object(jsx_runtime.jsxs)("li",Object.assign({},props,{children:[Object(jsx_runtime.jsx)("div",{className:classes.optionIcon,children:icon}),itemRenderer?itemRenderer(option,selected):option.label]}))},getOptionDisabled:function getOptionDisabled(option){return!!option.disabled||!!disableNewSelect&&!selectedValues.has(option.value)},filterOptions:searchable?void 0:function(){return options}},AutocompleteProps,{open:!0,disablePortal:!0,multiple:multiple,options:options,value:value,onChange:handleChange,classes:Object.assign({root:cx(classes.root,!searchable&&classes.hideSearch),popper:classes.popper,popperDisablePortal:classes.popperDisablePortal,listbox:cx(classes.listbox,!searchable&&classes.hideSearch,!multiple&&!clearable&&classes.noFooter,freeText&&classes.freeText),option:classes.option,noOptions:classes.noOptions,groupLabel:classes.groupLabel},null==AutocompleteProps?void 0:AutocompleteProps.classes),PaperComponent:src_FragmentWrapper,PopperComponent:src_FragmentWrapper,renderTags:function renderTags(){return null},getOptionLabel:function getOptionLabel(option){return option.label},isOptionEqualToValue:function isOptionEqualToValue(option,value){return option.value===value.value},renderInput:function renderInput(params){return Object(jsx_runtime.jsx)(TextField.a,Object.assign({},params,{autoFocus:window.matchMedia("screen and (pointer: fine)").matches,onFocus:function onFocus(e){return e.target.select()},onKeyDown:function onKeyDown(e){"Escape"===e.key&&onClose()},variant:"filled",type:"search",hiddenLabel:!0,placeholder:searchBoxLabel,"aria-label":searchBoxLabel,size:"small",className:classes.search},SearchBoxProps,{ref:params.InputProps.ref,inputProps:searchable?Object.assign({},params.inputProps,null==SearchBoxProps?void 0:SearchBoxProps.inputProps):Object.assign({},params.inputProps,null==SearchBoxProps?void 0:SearchBoxProps.inputProps,{value:""}),InputProps:Object.assign({hiddenLabel:!0,disableUnderline:!0,classes:{root:classes.searchInput},startAdornment:Object(jsx_runtime.jsx)(InputAdornment.a,{position:"start",children:Object(jsx_runtime.jsx)(SearchBoxIcon,{color:"action",sx:{pointerEvents:"none",mr:.5}})})},null==SearchBoxProps?void 0:SearchBoxProps.InputProps)}))},clearOnBlur:!1})),freeText&&Object(jsx_runtime.jsx)(AddItem,{disabled:disableNewSelect,multiple:multiple,value:value,onChange:handleChange,AddButtonProps:AddButtonProps,AddDialogProps:AddDialogProps}),Object(jsx_runtime.jsx)(PopupFooter,{multiple:multiple,selectAll:selectAll,clearable:clearable,onSelectAll:onSelectAll,onClear:onClear,onClose:onClose,countText:countText,clearText:clearText,selectAllText:selectAllText,doneText:doneText,value:value,options:options,max:max})]})}try{PopupContents.displayName="PopupContents",PopupContents.__docgenInfo={description:"",displayName:"PopupContents",props:{multiple:{defaultValue:null,description:"",name:"multiple",required:!0,type:{name:"boolean"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"Option<T>[]"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"Option<T> | Option<T>[] | null"}},max:{defaultValue:null,description:"",name:"max",required:!1,type:{name:"number | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"((event: SyntheticEvent<Element, Event>, value: (string | Option<T>)[], reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<...> | undefined) => void) | ((event: SyntheticEvent<...>, value: string | ... 1 more ... | null, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<...> | ..."}},AutocompleteProps:{defaultValue:null,description:"Override certain props of the Autocomplete component.\n[See props here](https://material-ui.com/api/autocomplete/)",name:"AutocompleteProps",required:!1,type:{name:"Partial<ExposedAutocompleteProps<T, true, false, true>> | Partial<ExposedAutocompleteProps<T, false, false, true>> | undefined"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onSelectAll:{defaultValue:null,description:"",name:"onSelectAll",required:!0,type:{name:"() => void"}},onClear:{defaultValue:null,description:"",name:"onClear",required:!0,type:{name:"() => void"}},labelPlural:{defaultValue:{value:""},description:"Used as the label for the search box and no options text",name:"labelPlural",required:!1,type:{name:"string | undefined"}},label:{defaultValue:{value:""},description:"Backup label if `labelPlural` is `undefined`.\nAlso used for “add item” text",name:"label",required:!1,type:{name:"string | undefined"}},searchable:{defaultValue:{value:"true"},description:"Optionally prevent the user from searching options",name:"searchable",required:!1,type:{name:"boolean | undefined"}},selectAll:{defaultValue:{value:"true"},description:"Optionally prevent the user to select all options if `multiple: true`",name:"selectAll",required:!1,type:{name:"boolean | undefined"}},clearable:{defaultValue:{value:"true"},description:"Optionally prevent from clearing the value",name:"clearable",required:!1,type:{name:"boolean | undefined"}},freeText:{defaultValue:{value:"false"},description:"Optionally allow the user to add any custom value.\nOption value **must** be string",name:"freeText",required:!1,type:{name:"boolean | undefined"}},countText:{defaultValue:null,description:"Optionally override the text shown in the count on the left of the footer",name:"countText",required:!1,type:{name:"ReactNode"}},clearText:{defaultValue:{value:"Clear"},description:"Optionally override the text for the Clear button",name:"clearText",required:!1,type:{name:"string | undefined"}},selectAllText:{defaultValue:{value:"Select all"},description:"Optionally override the text for the Select All button",name:"selectAllText",required:!1,type:{name:"string | undefined"}},doneText:{defaultValue:{value:"Done"},description:"Optionally override the text for the Done button",name:"doneText",required:!1,type:{name:"string | undefined"}},itemRenderer:{defaultValue:null,description:"Optionally override how each option is rendered, while still showing the\ncheckbox or radio icon.\n\nTo hide or change the icon, use\n[Autocomplete’s `renderOption` prop](https://material-ui.com/api/autocomplete/)",name:"itemRenderer",required:!1,type:{name:"((option: Option<T>, selected: boolean) => ReactNode) | undefined"}},itemIcons:{defaultValue:null,description:"Optionally override the checkbox and radio icons.",name:"itemIcons",required:!1,type:{name:'Partial<Record<"multiple" | "single" | "singleSelected" | "multipleSelected", ReactNode>> | undefined'}},SearchBoxProps:{defaultValue:null,description:"Override certain props of the search box MUI TextField component.\n[See props here](https://material-ui.com/api/text-field/)",name:"SearchBoxProps",required:!1,type:{name:"Partial<TextFieldProps> | undefined"}},AddButtonProps:{defaultValue:null,description:"Override certain props of the “Add New” Button component.\n[See props here](https://material-ui.com/api/button/)",name:"AddButtonProps",required:!1,type:{name:'(Partial<ButtonProps<"button", {}>> & { singleIcon?: ReactNode; multipleIcon?: ReactNode; }) | undefined'}},AddDialogProps:{defaultValue:null,description:"Override certain props of the “Add New” Dialog.",name:"AddDialogProps",required:!1,type:{name:"{ title?: ReactNode; textFieldLabel?: ReactNode; cancelButtonLabel?: ReactNode; addButtonLabel?: ReactNode; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/PopupContents.tsx#PopupContents"]={docgenInfo:PopupContents.__docgenInfo,name:"PopupContents",path:"src/PopupContents.tsx#PopupContents"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["options","value","onChange","label","max","disabled","multiple","searchable","selectAll","clearable","freeText","displayEmpty","backdrop","onOpen","onClose","TextFieldProps"];function MultiSelect_slicedToArray(arr,i){return function MultiSelect_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function MultiSelect_iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null==_i)return;var _s,_e,_arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function MultiSelect_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return MultiSelect_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return MultiSelect_arrayLikeToArray(o,minLen)}(arr,i)||function MultiSelect_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function MultiSelect_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var MultiSelect_useStyles=Object(mui.makeStyles)()((function(){return{paper:{minHeight:layout.d+layout.b+layout.a,"&$hideSearch":{minHeight:layout.b+layout.a},"&$noFooter":{minHeight:layout.d+layout.b},"&$hideSearch$noFooter":{minHeight:layout.b}},hideSearch:{},noFooter:{}}}));function MultiSelect(_ref){var _TextFieldProps$Selec,_TextFieldProps$Selec2,_TextFieldProps$Selec3,_TextFieldProps$Selec4,_TextFieldProps$Selec5,value,_options$find2,optionsProp=_ref.options,valueProp=_ref.value,onChange=_ref.onChange,_ref$label=_ref.label,label=void 0===_ref$label?"":_ref$label,max=_ref.max,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled,_ref$multiple=_ref.multiple,multiple=void 0===_ref$multiple||_ref$multiple,_ref$searchable=_ref.searchable,searchable=void 0===_ref$searchable||_ref$searchable,_ref$selectAll=_ref.selectAll,selectAll=void 0===_ref$selectAll||_ref$selectAll,_ref$clearable=_ref.clearable,clearable=void 0===_ref$clearable||_ref$clearable,_ref$freeText=_ref.freeText,freeText=void 0!==_ref$freeText&&_ref$freeText,_ref$displayEmpty=_ref.displayEmpty,displayEmpty=void 0!==_ref$displayEmpty&&_ref$displayEmpty,_ref$backdrop=_ref.backdrop,backdrop=void 0!==_ref$backdrop&&_ref$backdrop,onOpen=_ref.onOpen,onClose=_ref.onClose,_ref$TextFieldProps=_ref.TextFieldProps,TextFieldProps=void 0===_ref$TextFieldProps?{}:_ref$TextFieldProps,props=_objectWithoutProperties(_ref,_excluded),_useStyles=MultiSelect_useStyles(),classes=_useStyles.classes,cx=_useStyles.cx,_useState2=MultiSelect_slicedToArray(Object(react.useState)(!1),2),open=_useState2[0],setOpen=_useState2[1],handleClose=function handleClose(){setOpen(!1),null==onClose||onClose()},options="string"==typeof optionsProp[0]?optionsProp.map((function(item){return{label:item,value:item}})):optionsProp;multiple?value=valueProp.map((function(item){var _options$find;return null!==(_options$find=options.find((function(option){return option.value===item})))&&void 0!==_options$find?_options$find:{label:item,value:item}})).filter((function(item){return void 0!==item})):value=valueProp&&""!==valueProp?null!==(_options$find2=options.find((function(option){return option.value===valueProp})))&&void 0!==_options$find2?_options$find2:{label:valueProp,value:valueProp}:null;if(freeText)if(multiple)for(var valueArray=value,_loop=function _loop(i){var item=valueArray[i];options.findIndex((function(option){return option.value===item.value}))<=-1&&options.unshift(item)},i=valueArray.length-1;i>=0;i--)_loop(i);else null!==value&&value.value&&options.findIndex((function(option){return option.value===value.value}))<=-1&&options.unshift(value);var PopupContentsProps=Object.assign({},props,{options:options,label:label,searchable:searchable,selectAll:selectAll,clearable:clearable,freeText:freeText,onChange:function handleChange(_,newValue,reason){multiple?onChange(newValue.map((function(item){return item.value})),reason):newValue&&(onChange(newValue.value,reason),handleClose())},onClose:handleClose,onSelectAll:function handleSelectAll(){return onChange(options.map((function(item){return item.value})),"selectOption")},onClear:function handleClear(){return onChange(multiple?[]:null,"removeOption")}});return Object(jsx_runtime.jsx)(TextField.a,Object.assign({label:label,select:!0,fullWidth:!0},TextFieldProps,{disabled:disabled,InputLabelProps:Object.assign({shrink:displayEmpty||(Array.isArray(valueProp)?valueProp.length>0:!!valueProp)},TextFieldProps.InputLabelProps),SelectProps:Object.assign({open:open,onOpen:function handleOpen(){setOpen(!0),null==onOpen||onOpen()},onClose:handleClose,renderValue:function renderValue(_){return Array.isArray(value)?1===value.length?value[0].label:value.length>1?value.length+" of "+options.length+" selected":displayEmpty?"0 of "+options.length+" selected":"":null!==value?value.label:displayEmpty?"0 of "+options.length+" selected":""},displayEmpty:!0},TextFieldProps.SelectProps,{MenuProps:Object.assign({classes:{paper:cx(classes.paper,!searchable&&classes.hideSearch,!multiple&&!clearable&&classes.noFooter,"MultiSelect-Paper")},getContentAnchorEl:null,anchorOrigin:{vertical:"bottom",horizontal:"center"},transformOrigin:{vertical:"top",horizontal:"center"}},null===(_TextFieldProps$Selec=TextFieldProps.SelectProps)||void 0===_TextFieldProps$Selec?void 0:_TextFieldProps$Selec.MenuProps,{BackdropProps:Object.assign({invisible:!backdrop},null===(_TextFieldProps$Selec2=TextFieldProps.SelectProps)||void 0===_TextFieldProps$Selec2||null===(_TextFieldProps$Selec3=_TextFieldProps$Selec2.MenuProps)||void 0===_TextFieldProps$Selec3?void 0:_TextFieldProps$Selec3.BackdropProps),PaperProps:{onFocus:function handlePaperFocus(e){e.target===e.currentTarget&&handleClose()}},MenuListProps:Object.assign({disablePadding:!0,component:"div",style:{padding:0}},null==TextFieldProps||null===(_TextFieldProps$Selec4=TextFieldProps.SelectProps)||void 0===_TextFieldProps$Selec4||null===(_TextFieldProps$Selec5=_TextFieldProps$Selec4.MenuProps)||void 0===_TextFieldProps$Selec5?void 0:_TextFieldProps$Selec5.MenuListProps,{autoFocus:!1,role:"",onKeyDown:function onKeyDown(){}})})}),children:Object(jsx_runtime.jsx)(src_FragmentWrapper,{children:multiple?Object(jsx_runtime.jsx)(PopupContents,Object.assign({multiple:!0,value:value,max:max},PopupContentsProps)):Object(jsx_runtime.jsx)(PopupContents,Object.assign({multiple:!1,value:value},PopupContentsProps))})}))}MultiSelect.displayName="MultiSelect";try{MultiSelect.displayName="MultiSelect",MultiSelect.__docgenInfo={description:"A component to select multiple items from a list of options using the\n[Material-UI Autocomplete component](https://material-ui.com/components/autocomplete/).\n\nTo use, you must provide at least the `value`, `onChange`, and `options`\nprops. You should also provide a `label` and `labelPlural` prop. By default,\nthe component is in multi-select mode and values are strings.\n\n## `options` prop\n\nThe simplest value for the `options` prop is an array of strings.\n\nIf you need more control over the value returned by MultiSelect, pass an\narray of `Option` objects, which must follow this type:\n\n```ts\ntype Option<T = string> = {\n  value: T;\n  label: string;\n  disabled?: boolean;\n}\n```\n\n## `value` and `onChange` prop types depend on the `multiple` prop\n\n`value` must be an array of `T` in multi-select mode.\n\nIn single-select mode, it must be either `T` itself or `null`.\n\nThe first parameter of `onChange` follows the same type as `value`.",displayName:"MultiSelect",props:{multiple:{defaultValue:{value:"true"},description:"**⚠️ Important:** This prop dictates the type of the\n`value` and `onChange` props",name:"multiple",required:!1,type:{name:"boolean | undefined"}},value:{defaultValue:null,description:"The value of MultiSelect. This component must be controlled.\n\nThe value must have reference equality with the option in order to be\nselected. You can customize the equality behavior with the\n[Autocomplete `getOptionSelected` prop](https://material-ui.com/api/autocomplete/)\n\n**⚠️ Important:**\n\n- If `multiple: true`, this prop must be an array of values\n- If `multiple: false`, this prop must be either the value itself or `null`",name:"value",required:!0,type:{name:"T | T[] | null"}},onChange:{defaultValue:null,description:"Callback fired when the value changes.\n\n`value` parameter type is the same as the `value` prop type above.\n\nNote if `multiple: false`, the `value` parameter may be `null` and the\npopup will automatically close whenever the value changes",name:"onChange",required:!0,type:{name:"((value: T[], reason: AutocompleteChangeReason) => void) | ((value: T | null, reason: AutocompleteChangeReason) => void)"}},options:{defaultValue:null,description:"The options used by Autocomplete.\n\nIf an array of strings is provided, each value will be mapped to\nan `Option` object",name:"options",required:!0,type:{name:"string[] | Option<T>[]"}},disabled:{defaultValue:{value:"false"},description:"Disable the field entirely.\nAlso prevents Autocomplete from being rendered",name:"disabled",required:!1,type:{name:"boolean | undefined"}},displayEmpty:{defaultValue:{value:"false"},description:"Display “0 of X selected” when empty",name:"displayEmpty",required:!1,type:{name:"boolean | undefined"}},backdrop:{defaultValue:{value:"false"},description:"Show the backdrop when the dropdown popup is open",name:"backdrop",required:!1,type:{name:"boolean | undefined"}},max:{defaultValue:null,description:"Maximum number of items can be selected",name:"max",required:!1,type:{name:"number | undefined"}},onOpen:{defaultValue:null,description:"Callback fired when popup opens",name:"onOpen",required:!1,type:{name:"(() => void) | undefined"}},onClose:{defaultValue:null,description:"Callback fired when popup closes",name:"onClose",required:!1,type:{name:"(() => void) | undefined"}},TextFieldProps:{defaultValue:{value:"{}"},description:"Override any props of the root MUI TextField component.\n[See props here](https://material-ui.com/api/text-field/)",name:"TextFieldProps",required:!1,type:{name:"Partial<TextFieldProps> | undefined"}},labelPlural:{defaultValue:null,description:"Used as the label for the search box and no options text",name:"labelPlural",required:!1,type:{name:"string | undefined"}},label:{defaultValue:{value:""},description:"Backup label if `labelPlural` is `undefined`.\nAlso used for “add item” text",name:"label",required:!1,type:{name:"string | undefined"}},searchable:{defaultValue:{value:"true"},description:"Optionally prevent the user from searching options",name:"searchable",required:!1,type:{name:"boolean | undefined"}},selectAll:{defaultValue:{value:"true"},description:"Optionally prevent the user to select all options if `multiple: true`",name:"selectAll",required:!1,type:{name:"boolean | undefined"}},clearable:{defaultValue:{value:"true"},description:"Optionally prevent from clearing the value",name:"clearable",required:!1,type:{name:"boolean | undefined"}},freeText:{defaultValue:{value:"false"},description:"Optionally allow the user to add any custom value.\nOption value **must** be string",name:"freeText",required:!1,type:{name:"boolean | undefined"}},countText:{defaultValue:null,description:"Optionally override the text shown in the count on the left of the footer",name:"countText",required:!1,type:{name:"ReactNode"}},clearText:{defaultValue:null,description:"Optionally override the text for the Clear button",name:"clearText",required:!1,type:{name:"string | undefined"}},selectAllText:{defaultValue:null,description:"Optionally override the text for the Select All button",name:"selectAllText",required:!1,type:{name:"string | undefined"}},doneText:{defaultValue:null,description:"Optionally override the text for the Done button",name:"doneText",required:!1,type:{name:"string | undefined"}},itemRenderer:{defaultValue:null,description:"Optionally override how each option is rendered, while still showing the\ncheckbox or radio icon.\n\nTo hide or change the icon, use\n[Autocomplete’s `renderOption` prop](https://material-ui.com/api/autocomplete/)",name:"itemRenderer",required:!1,type:{name:"((option: Option<T>, selected: boolean) => ReactNode) | undefined"}},itemIcons:{defaultValue:null,description:"Optionally override the checkbox and radio icons.",name:"itemIcons",required:!1,type:{name:'Partial<Record<"multiple" | "single" | "singleSelected" | "multipleSelected", ReactNode>> | undefined'}},SearchBoxProps:{defaultValue:null,description:"Override certain props of the search box MUI TextField component.\n[See props here](https://material-ui.com/api/text-field/)",name:"SearchBoxProps",required:!1,type:{name:"Partial<TextFieldProps> | undefined"}},AddButtonProps:{defaultValue:null,description:"Override certain props of the “Add New” Button component.\n[See props here](https://material-ui.com/api/button/)",name:"AddButtonProps",required:!1,type:{name:'(Partial<ButtonProps<"button", {}>> & { singleIcon?: ReactNode; multipleIcon?: ReactNode; }) | undefined'}},AddDialogProps:{defaultValue:null,description:"Override certain props of the “Add New” Dialog.",name:"AddDialogProps",required:!1,type:{name:"{ title?: ReactNode; textFieldLabel?: ReactNode; cancelButtonLabel?: ReactNode; addButtonLabel?: ReactNode; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/MultiSelect.tsx#MultiSelect"]={docgenInfo:MultiSelect.__docgenInfo,name:"MultiSelect",path:"src/MultiSelect.tsx#MultiSelect"})}catch(__react_docgen_typescript_loader_error){}},655:function(module,exports,__webpack_require__){__webpack_require__(656),__webpack_require__(805),__webpack_require__(806),__webpack_require__(1259),__webpack_require__(1260),__webpack_require__(1268),__webpack_require__(1266),__webpack_require__(1262),__webpack_require__(1269),__webpack_require__(1263),__webpack_require__(1264),__webpack_require__(1270),module.exports=__webpack_require__(1238)},721:function(module,exports){},806:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(440)},843:function(module,exports){}},[[655,2,3]]]);