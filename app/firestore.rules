rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow admins to read and write all documents
    match /{document=**} {
      allow read, write: if hasAnyRole(["ADMIN", "OWNER"]);
    }

    // Hanzo: Allow signed in users to read Hanzo configuration and admins to write
    match /_hanzo_/{docId} {
      allow read: if request.auth.token.roles.size() > 0;
      allow write: if hasAnyRole(["ADMIN", "OWNER"]);
    	match /{document=**} {
        allow read: if request.auth.token.roles.size() > 0;
        allow write: if hasAnyRole(["ADMIN", "OWNER"]);
      }
    }
    // Hanzo: Allow users to edit their settings
    match /_hanzo_/userManagement/users/{userId} {
      allow get, update, delete: if isDocOwner(userId);
      allow create: if request.auth != null;
    }
    // Hanzo: Allow public to read public Hanzo configuration
    match /_hanzo_/publicSettings {
    	allow get: if true;
    }
    
    // Hanzo: Utility functions
    function isDocOwner(docId) {
      return request.auth != null && (request.auth.uid == resource.id || request.auth.uid == docId);
    }
    function hasAnyRole(roles) {
      return request.auth != null && request.auth.token.roles.hasAny(roles);
    }
  }
}
